name: Deploy to Azure

on:
  push:
    branches: [ main ]
    paths: ['backend/**', '.github/workflows/azure-deploy.yml']
  workflow_dispatch:

env:
  AZURE_CONTAINER_APP_NAME: cinescope-backend
  AZURE_RESOURCE_GROUP: cinescope-rg
  CONTAINER_REGISTRY: ghcr.io
  IMAGE_NAME: cinescope-backend

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.CONTAINER_REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push backend image
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        file: ./backend/Dockerfile
        push: true
        tags: |
          ${{ env.CONTAINER_REGISTRY }}/${{ github.repository_owner }}/cinescopeanalyzer-backend:latest
          ${{ env.CONTAINER_REGISTRY }}/${{ github.repository_owner }}/cinescopeanalyzer-backend:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy to Azure Container Apps
      uses: azure/container-apps-deploy-action@v1
      with:
        appSourcePath: ${{ github.workspace }}/backend
        containerAppName: ${{ env.AZURE_CONTAINER_APP_NAME }}
        resourceGroup: ${{ env.AZURE_RESOURCE_GROUP }}
        imageToDeploy: ${{ env.CONTAINER_REGISTRY }}/${{ github.repository }}/backend:${{ github.sha }}
        environmentVariables: |
          OMDB_API_KEY=secretref:omdb-api-key
          MONGODB_URI=secretref:mongodb-uri
          PORT=8000
          PYTHONPATH=/app
          PYTHONUNBUFFERED=1
        containerAppName: ${{ env.AZURE_CONTAINER_APP_NAME }}
        resourceGroup: ${{ env.AZURE_RESOURCE_GROUP }}
        imageToDeploy: ${{ env.CONTAINER_REGISTRY }}/${{ github.repository }}/backend:${{ github.sha }}
        environmentVariables: |
          OMDB_API_KEY=secretref:omdb-api-key
          MONGODB_URI=secretref:mongodb-uri
          PORT=8000
          PYTHONPATH=/app
          PYTHONUNBUFFERED=1

  deploy-frontend:
    needs: build-and-deploy
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Install dependencies
      run: |
        cd frontend
        npm ci
      
    - name: Deploy to Vercel
      run: |
        cd frontend
        npx vercel --token ${{ secrets.VERCEL_TOKEN }} --prod --yes
      env:
        VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
        VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        NEXT_PUBLIC_API_URL: https://${{ env.AZURE_CONTAINER_APP_NAME }}.azurecontainerapps.io
