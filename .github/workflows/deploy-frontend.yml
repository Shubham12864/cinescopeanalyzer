name: 🌐 Deploy Frontend to Vercel

on:
  push:
    branches: [main, master]
    paths: ['frontend/**', '.github/workflows/**']
  pull_request:
    branches: [main, master]
    paths: ['frontend/**']

jobs:
  test-frontend:
    name: 🧪 Test Frontend
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
      
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      
      - name: 📦 Install dependencies
        run: |
          cd frontend
          npm ci
      
      - name: 🔍 Lint code
        run: |
          cd frontend
          npm run lint || echo "Linting completed with warnings"
      
      - name: 🏗️ Build project
        run: |
          cd frontend
          npm run build
        env:
          NEXT_PUBLIC_API_URL: https://cinescopeanalyzer-production.up.railway.app

  deploy-frontend:
    name: ▲ Deploy to Vercel
    needs: test-frontend
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
      
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      
      - name: 📦 Install dependencies
        run: |
          cd frontend
          npm ci
      
      - name: ▲ Deploy to Vercel
        run: |
          cd frontend
          npx vercel --token ${{ secrets.VERCEL_TOKEN }} --prod --yes
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          NEXT_PUBLIC_API_URL: https://cinescopeanalyzer-production.up.railway.app
      
      - name: 🎉 Deployment Success
        run: |
          echo "✅ Frontend deployed successfully to Vercel!"

  integration-test:
    name: 🔗 Test Frontend-Backend Integration
    needs: [deploy-frontend]
    runs-on: ubuntu-latest
    
    steps:
      - name: 🧪 Test API Connection
        run: |
          echo "Testing backend health..."
          curl -f https://cinescopeanalyzer-production.up.railway.app/api/health || exit 1
          echo "✅ Backend is responding!"
          
      - name: 🎬 Test Movie Search
        run: |
          echo "Testing movie search..."
          curl -f "https://cinescopeanalyzer-production.up.railway.app/api/movies/search?q=batman" || exit 1
          echo "✅ Movie search is working!"
