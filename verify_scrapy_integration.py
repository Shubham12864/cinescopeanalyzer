#!/usr/bin/env python3
"""
Verify Scrapy integration is working properly
"""
import sys
import os
import asyncio

# Add backend to path
sys.path.append(os.path.join(os.path.dirname(__file__), 'backend'))

async def verify_scrapy_integration():
    """Verify that Scrapy integration is working in the full system"""
    print("üîç SCRAPY INTEGRATION VERIFICATION")
    print("=" * 50)
    
    success_count = 0
    total_tests = 4
    
    # Test 1: ScrapySearchService import
    print("1Ô∏è‚É£  Testing ScrapySearchService import...")
    try:
        from backend.app.services.scrapy_search_service import ScrapySearchService
        print("   ‚úÖ ScrapySearchService imported successfully")
        success_count += 1
    except Exception as e:
        print(f"   ‚ùå Import failed: {e}")
    
    # Test 2: Service initialization
    print("\n2Ô∏è‚É£  Testing service initialization...")
    try:
        scrapy_service = ScrapySearchService()
        print("   ‚úÖ ScrapySearchService initialized")
        success_count += 1
    except Exception as e:
        print(f"   ‚ùå Initialization failed: {e}")
        scrapy_service = None
    
    # Test 3: API Manager integration
    print("\n3Ô∏è‚É£  Testing API Manager integration...")
    try:
        from backend.app.core.api_manager import APIManager, SCRAPY_SEARCH_AVAILABLE
        print(f"   ‚úÖ SCRAPY_SEARCH_AVAILABLE: {SCRAPY_SEARCH_AVAILABLE}")
        
        if SCRAPY_SEARCH_AVAILABLE:
            api_manager = APIManager()
            has_scrapy = api_manager.scrapy_search is not None
            print(f"   ‚úÖ API Manager has Scrapy service: {has_scrapy}")
            success_count += 1
        else:
            print("   ‚ö†Ô∏è Scrapy not available in API Manager (will use fallbacks)")
    except Exception as e:
        print(f"   ‚ùå API Manager test failed: {e}")
    
    # Test 4: Basic search functionality
    print("\n4Ô∏è‚É£  Testing basic search...")
    if scrapy_service:
        try:
            results = await scrapy_service.search_movies("Matrix", limit=1)
            if results:
                movie = results[0]
                print(f"   ‚úÖ Search successful: {movie.get('title', 'Unknown')}")
                success_count += 1
            else:
                print("   ‚ö†Ô∏è Search returned no results (may be network issue)")
        except Exception as e:
            print(f"   ‚ùå Search test failed: {e}")
    else:
        print("   ‚è© Skipping search test (service not initialized)")
    
    # Summary
    print(f"\nüìä RESULTS: {success_count}/{total_tests} tests passed")
    
    if success_count >= 3:
        print("üéâ SCRAPY INTEGRATION IS WORKING!")
        print("   ‚úÖ Service can be imported and initialized")
        print("   ‚úÖ API Manager integration functional")
        print("   ‚úÖ Ready for use in movie search pipeline")
        return True
    elif success_count >= 2:
        print("‚ö†Ô∏è SCRAPY PARTIALLY WORKING")
        print("   ‚úÖ Service available but may have issues")
        print("   üí° Check network connectivity for searches")
        return True
    else:
        print("‚ùå SCRAPY INTEGRATION HAS ISSUES")
        print("   üí° Check if dependencies are installed:")
        print("      pip install requests beautifulsoup4 lxml")
        return False

if __name__ == "__main__":
    try:
        result = asyncio.run(verify_scrapy_integration())
        sys.exit(0 if result else 1)
    except KeyboardInterrupt:
        print("\n‚èπÔ∏è Verification interrupted")
        sys.exit(1)
